进入pdb调式模式
1、修改代码
import pdb
pdb.set_trace()
2、模块启动进入
python -m pdb test.py
基本控制流
n(next)[1]
n 执行当前行

s(step)[1]
s 执行当前行,如果是函数的话会进入函数

c(continue)[1]
c 继续运行

r(return)[1]
r 继续运行到当前函数返回

q(quit)[1]
q 退出程序

辅助控制流
unt(until)[2]
unt 233 执行到233行才停下来

j(jump)[2]
j 233 跳转到第233行

run(restart)[4]
run 重启程序

断点
b(break)[1]
b 查看所有断点
b 233 在233行设置断点
b fx 在函数fx入口设置断点
b a/b.py:233 在a/b.py文件里的233行设置断点
b 233,a==3 设置条件,只有满足条件,才停下来

condition[2]
condition 4 a==3 对第4个断点设置条件
condition 4 取消条件

cl(clear)[1]
cl 3 清除第3个断点
cl 3 5 7 清除多个断点
cl 清除所有断点(需要再按y确认)

enable/disable[3]
disable 3 禁用第3个断点
disable 3 5 6 禁用多个断点
enable 4 重新激活第4个断点
enable 4 6 8 重新激活多个断点

ignore[4]
ignore 3 4 忽略第3个断点4次

tbreak[4]
tbreak 233 一次性断点


查看与执行
执行完下一句才能查看变量的值
p/pp[1]
p cnt 查看cnt这个变量的值
pp cnt 以更好看的打印方式(pretty print)查看cnt这个变量的值

![1]
!x=233 执行x=233这个命令

l(list)/ll(longlist)[1]
l 查看当前行为中心的上下代码块,继续按会查看后面的代码
l . 始终查看当前行为中心的上下代码块
l 14 查看14为中心的上下代码块
l 14,20 查看14到20行之间的代码块
ll 查看当前函数的代码块

a(args)[3]
a 查看当前所有局部变量的值

whatis[4]
whatis cnt 查看cnt的类型

函数栈控制流
w(where,bt)[3]
w 查看当前函数栈

u(up)[3]
u 跳到上一层函数栈
u 3 往上跳3层函数栈

d(down)[3]
d 跳到下一层函数栈
d 3 往下跳3层函数栈